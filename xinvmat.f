! This subroutine calculates the inverse of an nxn matrix for 
! n = 1 to 5
      subroutine xinvmat(a,ai,deta,n)
      implicit double precision (a-h, o-z)
      double precision, intent(inout), dimension(1:n,1:n) :: a
      double precision, intent(out), dimension(1:n,1:n) :: ai
      double precision, intent(out) :: deta
      integer, intent(in) :: n
      double precision, parameter :: tol = 1.000000000000000d-12
      double precision, dimension(1:n) :: fac
      double precision, dimension(1:n,1:n) :: at
!
!        for n = 1
!
      if (n .eq. 1) then
         deta = a(1,1)
         if (abs(deta) .lt. tol) then
            print *, 'xinvmat:  ERROR, your determinant of the jacobian
     &               is zero!!!', deta
            ai = a
            stop
         else
            ai = 1.d0/deta
         endif
!
!        for n = 2
!
      elseif (n .eq. 2) then
         deta = a(1,1)*a(2,2)-a(1,2)*a(2,1)
         if (abs(deta) .lt. tol) then
            print *, 'xinvmat:  ERROR, your determinant of the jacobian
     &                is zero!!!', deta
            ai = a
            stop
         else
            ai(1,1) = a(2,2)
            ai(2,2) = a(1,1)
            ai(1,2) = -a(1,2)
            ai(2,1) = -a(2,1)
            ai = 1.d0/deta*ai
         endif
!
!        for n = 3
!
      elseif (n .eq. 3) then
         deta1 = a(1,1)*a(2,2)*a(3,3) +  a(1,2)*a(2,3)*a(3,1) + 
     &           a(1,3)*a(2,1)*a(3,2) 
             deta2 = - a(3,1)*a(2,2)*a(1,3) - 
     &               a(3,2)*a(2,3)*a(1,1) - a(3,3)*a(2,1)*a(1,2)
             deta = deta1 + deta2
         if (abs(deta) .lt. tol) then
            print *, 'xinvmat:  ERROR, your determinant of the jacobian
     &                            is zero!!!', deta
            ai = a
            stop
         else
            ai(1,1) = a(2,2)*a(3,3) - a(3,2)*a(2,3)
            ai(1,2) = a(1,3)*a(3,2) - a(3,3)*a(1,2)
            ai(1,3) = a(1,2)*a(2,3) - a(2,2)*a(1,3)
            ai(2,1) = a(2,3)*a(3,1) - a(3,3)*a(2,1)
            ai(2,2) = a(1,1)*a(3,3) - a(3,1)*a(1,3)
            ai(2,3) = a(2,1)*a(1,3) - a(2,3)*a(1,1)
            ai(3,1) = a(2,1)*a(3,2) - a(3,1)*a(2,2)
            ai(3,2) = a(1,2)*a(3,1) - a(3,2)*a(1,1)
            ai(3,3) = a(1,1)*a(2,2) - a(2,1)*a(1,2)
            ai = ai/deta
         endif
!
!        for n = 4
!
      elseif (n .eq. 4) then
       detaA = a(1,1)*a(2,2)*a(3,3)*a(4,4)-a(1,1)*a(2,2)*a(3,4)*a(4,3)
       detaB =- a(1,1)*a(3,2)*a(2,3)*a(4,4)+a(1,1)*a(3,2)*a(2,4)*a(4,3)
       detaC = a(1,1)*a(4,2)*a(2,3)*a(3,4)-a(1,1)*a(4,2)*a(2,4)*a(3,3)
       detaD = - a(2,1)*a(1,2)*a(3,3)*a(4,4)+a(2,1)*a(1,2)*a(3,4)*a(4,3)
       detaE = a(2,1)*a(3,2)*a(1,3)*a(4,4)-a(2,1)*a(3,2)*a(1,4)*a(4,3)
       detaF = - a(2,1)*a(4,2)*a(1,3)*a(3,4)+a(2,1)*a(4,2)*a(1,4)*a(3,3)
       detaG = a(3,1)*a(1,2)*a(2,3)*a(4,4)-a(3,1)*a(1,2)*a(2,4)*a(4,3)
       detaH = - a(3,1)*a(2,2)*a(1,3)*a(4,4)+a(3,1)*a(2,2)*a(1,4)*a(4,3)
       detaI = a(3,1)*a(4,2)*a(1,3)*a(2,4)-a(3,1)*a(4,2)*a(1,4)*a(2,3)
       detaJ = - a(4,1)*a(1,2)*a(2,3)*a(3,4)+a(4,1)*a(1,2)*a(2,4)*a(3,3)
       detaK = a(4,1)*a(2,2)*a(1,3)*a(3,4)-a(4,1)*a(2,2)*a(1,4)*a(3,3) 
       detaL = - a(4,1)*a(3,2)*a(1,3)*a(2,4)+a(4,1)*a(3,2)*a(1,4)*a(2,3)
       deta = detaA + detaB + detaC + detaD + detaE + detaF + 
     &           detaG + detaH + detaI + detaJ + detaK + detaL
         if (abs(deta) .lt. tol) then
            print *, 'xinvmat:  ERROR, your determinant of the
     &            jacobian is zero!!!', deta
            ai = a
            stop
         else  
            ai(1,1) = -( a(2,2)*a(3,3)*a(4,4)-a(2,2)*a(3,4)*a(4,3)
     &                -a(3,2)*a(2,3)*a(4,4)+a(3,2)*a(2,4)*a(4,3)
     &                +a(4,2)*a(2,3)*a(3,4)-a(4,2)*a(2,4)*a(3,3) ) 
            ai(1,2) = ( a(1,2)*a(3,3)*a(4,4)-a(1,2)*a(3,4)*a(4,3)
     &                -a(3,2)*a(1,3)*a(4,4)+a(3,2)*a(1,4)*a(4,3)
     &                +a(4,2)*a(1,3)*a(3,4)-a(4,2)*a(1,4)*a(3,3) ) 
            ai(1,3) = -( a(1,2)*a(2,3)*a(4,4)-a(1,2)*a(2,4)*a(4,3)
     &                -a(2,2)*a(1,3)*a(4,4)+a(2,2)*a(1,4)*a(4,3)
     &                +a(4,2)*a(1,3)*a(2,4)-a(4,2)*a(1,4)*a(2,3) ) 
            ai(1,4) = -(-a(1,2)*a(2,3)*a(3,4)+a(1,2)*a(2,4)*a(3,3)
     &                +a(2,2)*a(1,3)*a(3,4)-a(2,2)*a(1,4)*a(3,3)
     &                -a(3,2)*a(1,3)*a(2,4)+a(3,2)*a(1,4)*a(2,3) ) 
            ai(2,1) = ( a(2,1)*a(3,3)*a(4,4)-a(2,1)*a(3,4)*a(4,3)
     &                -a(3,1)*a(2,3)*a(4,4)+a(3,1)*a(2,4)*a(4,3)
     &                +a(4,1)*a(2,3)*a(3,4)-a(4,1)*a(2,4)*a(3,3) )
            ai(2,2) = ( -a(1,1)*a(3,3)*a(4,4)+a(1,1)*a(3,4)*a(4,3)
     &                +a(3,1)*a(1,3)*a(4,4)-a(3,1)*a(1,4)*a(4,3)
     &                -a(4,1)*a(1,3)*a(3,4)+a(4,1)*a(1,4)*a(3,3) )
            ai(2,3) = -( -a(1,1)*a(2,3)*a(4,4)+a(1,1)*a(2,4)*a(4,3)
     &                +a(2,1)*a(1,3)*a(4,4)-a(2,1)*a(1,4)*a(4,3)
     &                -a(4,1)*a(1,3)*a(2,4)+a(4,1)*a(1,4)*a(2,3) )
            ai(2,4) = ( -a(1,1)*a(2,3)*a(3,4)+a(1,1)*a(2,4)*a(3,3)
     &                +a(2,1)*a(1,3)*a(3,4)-a(2,1)*a(1,4)*a(3,3)
     &                -a(3,1)*a(1,3)*a(2,4)+a(3,1)*a(1,4)*a(2,3) )
            ai(3,1) = ( -a(2,1)*a(3,2)*a(4,4)+a(2,1)*a(3,4)*a(4,2)
     &                +a(3,1)*a(2,2)*a(4,4) -a(3,1)*a(2,4)*a(4,2)
     &                -a(4,1)*a(2,2)*a(3,4)+a(4,1)*a(2,4)*a(3,2) )
            ai(3,2) = -( -a(1,1)*a(3,2)*a(4,4)+a(1,1)*a(3,4)*a(4,2)
     &                +a(3,1)*a(1,2)*a(4,4)-a(3,1)*a(1,4)*a(4,2)
     &                -a(4,1)*a(1,2)*a(3,4)+a(4,1)*a(1,4)*a(3,2) )
            ai(3,3) = -( a(1,1)*a(2,2)*a(4,4)-a(1,1)*a(2,4)*a(4,2)
     &                -a(2,1)*a(1,2)*a(4,4)+a(2,1)*a(1,4)*a(4,2)
     &                +a(4,1)*a(1,2)*a(2,4)-a(4,1)*a(1,4)*a(2,2) )
            ai(3,4) = ( a(1,1)*a(2,2)*a(3,4)-a(1,1)*a(2,4)*a(3,2)
     &                -a(2,1)*a(1,2)*a(3,4)+a(2,1)*a(1,4)*a(3,2)
     &                +a(3,1)*a(1,2)*a(2,4)-a(3,1)*a(1,4)*a(2,2) )
            ai(4,1) = -( -a(2,1)*a(3,2)*a(4,3)+a(2,1)*a(3,3)*a(4,2)
     &                +a(3,1)*a(2,2)*a(4,3)-a(3,1)*a(2,3)*a(4,2)
     &                -a(4,1)*a(2,2)*a(3,3)+a(4,1)*a(2,3)*a(3,2) )
            ai(4,2) = -( a(1,1)*a(3,2)*a(4,3)-a(1,1)*a(3,3)*a(4,2)
     &                -a(3,1)*a(1,2)*a(4,3)+a(3,1)*a(1,3)*a(4,2)
     &                +a(4,1)*a(1,2)*a(3,3)-a(4,1)*a(1,3)*a(3,2) )
            ai(4,3) = ( a(1,1)*a(2,2)*a(4,3)-a(1,1)*a(2,3)*a(4,2) 
     &                -a(2,1)*a(1,2)*a(4,3)+a(2,1)*a(1,3)*a(4,2)
     &                +a(4,1)*a(1,2)*a(2,3)-a(4,1)*a(1,3)*a(2,2) )
            ai(4,4) = ( -a(1,1)*a(2,2)*a(3,3)+a(1,1)*a(2,3)*a(3,2)
     &                +a(2,1)*a(1,2)*a(3,3)-a(2,1)*a(1,3)*a(3,2)
     &                -a(3,1)*a(1,2)*a(2,3)+a(3,1)*a(1,3)*a(2,2) )
            ai = -1/deta*ai
         endif
!
!        for n = 5
!
      elseif (n .eq. 5) then
         a11 = a(1,1)
         a12 = a(1,2)
         a13 = a(1,3)
         a14 = a(1,4)
         a15 = a(1,5)
         a21 = a(2,1)
         a22 = a(2,2)
         a23 = a(2,3)
         a24 = a(2,4)
         a25 = a(2,5)
         a31 = a(3,1)
         a32 = a(3,2)
         a33 = a(3,3)
         a34 = a(3,4)
         a35 = a(3,5)
         a41 = a(4,1)
         a42 = a(4,2)
         a43 = a(4,3)
         a44 = a(4,4)
         a45 = a(4,5)
         a51 = a(5,1)
         a52 = a(5,2)
         a53 = a(5,3)
         a54 = a(5,4)
         a55 = a(5,5)
         detaA = -a21*a42*a13*a34*a55+a21*a12*a43*a34*a55-a21*a12*a43
     &          *a35*a54-a21*a12*a53*a34*a45+a21*a12*a53*a35*a44 +a21*
     &           a32*a13*a44*a55-a21*a32*a13*a45*a54-a21*a32*a43*a14*
     &          a55+a21*a32*a43*a15*a54+a21*a32*a53*a14*a45 -a21*a32*
     &           a53*a15*a44-a11*a42*a23*a35*a54-a11*a42*a33*a24*a55
     &          +a11*a42*a33*a25*a54+a11*a42*a53*a24*a35- a11*a42*a53*
     &           a25*a34-a11*a52*a23*a34*a45+a11*a52*a33*a24*a45-a11*
     &          a52*a33*a25*a44-a11*a52*a43*a24*a35+ a11*a52*a43*a25*
     &           a34-a21*a12*a33*a44*a55-a11*a22*a33*a45*a54
         detaB = -a11*a22*a43*a34*a55+a11*a22*a43*a35*a54+a11*a22*a53*
     &            a34*a45-a11*a22*a53*a35*a44-a11*a32*a23*a44*a55+a11*
     &           a32*a23*a45*a54+a11*a32*a43*a24*a55-a11*a32*a43*a25*
     &           a54-a11*a32*a53*a24*a45+a11*a32*a53*a25*a44+a11*a42*
     &           a23*a34*a55+a21*a12*a33*a45*a54-a51*a32*a13*a25*a44
     &          -a51*a32*a23*a14*a45+a51*a32*a23*a15*a44+a51*a32*a43*
     &           a14*a25-a51*a32*a43*a15*a24-a51*a42*a13*a24*a35+a51
     &          *a42*a13*a25*a34+a51*a42*a23*a14*a35-a51*a42*a23*a15*
     &           a34-a51*a42*a33*a14*a25+a51*a42*a33*a15*a24
     &           -a51*a12*a23*a35*a44
         detaC = -a51*a12*a33*a24*a45+a51*a12*a33*a25*a44+a51*a12*a43*
     &           a24*a35-a51*a12*a43*a25*a34-a51*a22*a13*a34*a45+a51*
     &           a22*a13*a35*a44+a51*a22*a33*a14*a45-a51*a22*a33*a15*
     &           a44-a51*a22*a43*a14*a35+a51*a22*a43*a15*a34-a41*a52*
     &           a13*a25*a34-a41*a52*a23*a14*a35+a41*a52*a23*a15*a34
     &          +a41*a52*a33*a14*a25-a41*a52*a33*a15*a24-a41*a12*a33*
     &           a25*a54-a41*a12*a53*a24*a35+a41*a12*a53*a25*a34+a41*
     &           a22*a13*a34*a55-a41*a22*a33*a14*a55+a41*a22*a33*a15*
     &           a54+a41*a22*a53*a14*a35-a41*a22*a53*a15*a34
         detaD = - a41*a32*a13*a24*a55+a41*a32*a13*a25*a54+a41*a32*a23*
     &             a14*a55-a41*a32*a23*a15*a54-a41*a32*a53*a14*a25+ 
     &             a41*a32*a53*a15*a24+a41*a52*a13*a24*a35+a31*a52*a23*
     &             a14*a45-a31*a52*a23*a15*a44-a31*a52*a43*a14*a25+ 
     &             a31*a52*a43*a15*a24-a41*a12*a23*a34*a55+a41*a12*a23*
     &             a35*a54+a31*a52*a13*a25*a44+a41*a12*a33*a24*a55+ 
     &             a51*a12*a23*a34*a45+a51*a32*a13*a24*a45+a31*a12*a23*
     &             a44*a55-a31*a12*a23*a45*a54-a31*a12*a43*a24*a55+
     &             a31*a12*a43*a25*a54+a31*a12*a53*a24*a45
     &             -a31*a12*a53*a25*a44
         detaE = -a31*a22*a13*a44*a55+a31*a22*a13*a45*a54+ a31*a22*a43*
     &            a14*a55-a31*a22*a43*a15*a54-a31*a22*a53*a14*a45+a31*
     &         a22*a53*a15*a44+a31*a42*a13*a24*a55-a31*a42*a13*a25*a54
     &           -a31*a42*a23*a14*a55+a31*a42*a23*a15*a54+a31*a42*a53*
     &        a14*a25-a31*a42*a53*a15*a24-a31*a52*a13*a24*a45+a21*a42*
     &         a13*a35*a54+a21*a42*a33*a14*a55-a21*a42*a33*a15*a54-
     &       a21*a42*a53*a14*a35+ a21*a42*a53*a15*a34+a21*a52*a13*a34*
     &         a45-a21*a52*a13*a35*a44-a21*a52*a33*a14*a45+a21*
     &           a52*a33*a15*a44+ a21*a52*a43*a14*a35
        detaF = -a21*a52*a43*a15*a34+a11*a22*a33*a44*a55-a41*a22*a13*
     &           a35*a54+a11*a52*a23*a35*a44
             deta = detaA + detaB + detaC + detaD + detaE + detaF 
        if (abs(deta) .lt. tol) then
          print *, 'xinvmat:  ERROR, your determinant of the jacobian
     &               is zero!!!', deta
            ai = a
            stop
         else
            ai(1,1) = a22*a33*a44*a55-a22*a33*a45*a54-a22*a43*a34*a55
     &          +a22*a43*a35*a54+a22*a53*a34*a45- a22*a53*a35*a44-a32*
     &                a23*a44*a55+a32*a23*a45*a54+a32*a43*a24*a55-a32*
     &           a43*a25*a54- a32*a53*a24*a45+a32*a53*a25*a44+a42*a23*
     &               a34*a55-a42*a23*a35*a54-a42*a33*a24*a55+ a42*a33*
     &            a25*a54+a42*a53*a24*a35-a42*a53*a25*a34-a52*a23*a34*
     &                a45+a52*a23*a35*a44+ a52*a33*a24*a45-a52*a33*a25*
     &               a44-a52*a43*a24*a35+a52*a43*a25*a34
            ai(1,2) = -(a12*a33*a44*a55-a12*a33*a45*a54-a12*a43*a34*a55
     &            +a12*a43*a35*a54+a12*a53*a34*a45- a12*a53*a35*a44-a32*
     &              a13*a44*a55+a32*a13*a45*a54+a32*a43*a14*a55-a32*a43*
     &               a15*a54- a32*a53*a14*a45+a32*a53*a15*a44+a42*a13*
     &                a34*a55-a42*a13*a35*a54-a42*a33*a14*a55+ a42*a33*
     &              a15*a54+a42*a53*a14*a35-a42*a53*a15*a34-a52*a13*a34*
     &                a45+a52*a13*a35*a44+ a52*a33*a14*a45-a52*a33*a15*
     &                a44-a52*a43*a14*a35+a52*a43*a15*a34)
            ai(1,3) =a12*a23*a44*a55-a12*a23*a45*a54-a12*a43*a24*a55
     &          +a12*a43*a25*a54+a12*a53*a24*a45- a12*a53*a25*a44-a22*
     &               a13*a44*a55+a22*a13*a45*a54+a22*a43*a14*a55-a22*
     &            a43*a15*a54- a22*a53*a14*a45+a22*a53*a15*a44+a42*a13*
     &               a24*a55-a42*a13*a25*a54-a42*a23*a14*a55+ a42*a23*
     &            a15*a54+a42*a53*a14*a25-a42*a53*a15*a24-a52*a13*a24*
     &               a45+a52*a13*a25*a44+ a52*a23*a14*a45-a52*a23*a15*
     &              a44-a52*a43*a14*a25+a52*a43*a15*a24
            ai(1,4) =-a12*a23*a34*a55+a12*a53*a25*a34+a12*a23*a35*a54
     &          -a12*a33*a25*a54-a12*a53*a24*a35+ a12*a33*a24*a55+a52*
     &               a23*a15*a34-a22*a53*a15*a34+a22*a13*a34*a55-a52*
     &           a13*a25*a34+ a32*a23*a14*a55-a52*a23*a14*a35-a32*a23*
     &               a15*a54-a32*a13*a24*a55-a52*a33*a15*a24+ a52*a13*
     &            a24*a35-a32*a53*a14*a25+a32*a13*a25*a54+a22*a33*a15*
     &               a54+a52*a33*a14*a25+ a22*a53*a14*a35-a22*a33*a14*
     &               a55+a32*a53*a15*a24-a22*a13*a35*a54
            ai(1,5) =a12*a23*a34*a45-a12*a23*a35*a44-a12*a33*a24*a45
     &          +a12*a33*a25*a44+a12*a43*a24*a35- a12*a43*a25*a34-a22*
     &               a13*a34*a45+a22*a13*a35*a44+a22*a33*a14*a45-a22*
     &          a33*a15*a44- a22*a43*a14*a35+a22*a43*a15*a34+a32*a13*
     &               a24*a45-a32*a13*a25*a44-a32*a23*a14*a45+ a32*a23*
     &            a15*a44+a32*a43*a14*a25-a32*a43*a15*a24-a42*a13*a24*
     &               a35+a42*a13*a25*a34+ a42*a23*a14*a35-a42*a23*a15*
     &               a34-a42*a33*a14*a25+a42*a33*a15*a24
            ai(2,1) = -a41*a23*a34*a55+a41*a53*a25*a34+a41*a23*a35*a54
     &          -a41*a33*a25*a54-a41*a53*a24*a35+ a41*a33*a24*a55+a34*
     &                a51*a45*a23+a34*a21*a43*a55-a34*a21*a53*a45-a34*
     &           a51*a43*a25- a23*a51*a35*a44+a23*a55*a31*a44-a23*a31*
     &                a45*a54+a31*a53*a24*a45-a21*a33*a44*a55+ a31*a43*
     &             a25*a54-a21*a43*a35*a54+a21*a33*a45*a54-a51*a33*a24*
     &                a45-a53*a25*a31*a44+ a51*a33*a25*a44+a21*a53*a35*
     &                a44+a51*a43*a24*a35-a55*a31*a24*a43
            ai(2,2) = -(-a41*a13*a34*a55+a41*a13*a35*a54+a41*a33*a14*a55
     &              -a41*a33*a15*a54-a41*a53*a14*a35+ a41*a53*a15*a34-
     &                a34*a11*a45*a53+a34*a51*a45*a13+a34*a55*a11*a43
     &           -a34*a15*a43*a51+ a15*a54*a31*a43-a51*a35*a44*a13-a31*
     &                a45*a54*a13-a35*a54*a11*a43+a14*a35*a43*a51+ a44*
     &             a11*a35*a53+a11*a45*a33*a54+a55*a31*a13*a44-a44*a31*
     &                a15*a53+a15*a33*a44*a51+ a14*a31*a45*a53-a55*a31*
     &                a14*a43-a51*a45*a14*a33-a55*a11*a33*a44)
            ai(2,3) = -(-a41*a23*a14*a55+a41*a23*a15*a54+a41*a13*a24*a55
     &               +a41*a53*a14*a25-a41*a13*a25*a54- a41*a53*a15*a24+
     &                a23*a51*a45*a14+a23*a55*a11*a44-a23*a15*a44*a51
     &          -a23*a11*a45*a54- a55*a11*a24*a43-a51*a45*a13*a24-a55*
     &                a21*a13*a44+a21*a43*a55*a14-a53*a25*a11*a44+ a15*
     &             a51*a24*a43-a21*a43*a15*a54+a43*a11*a25*a54-a21*a53*
     &                a45*a14-a51*a43*a25*a14+ a21*a13*a45*a54+a13*a25*
     &                a44*a51+a11*a45*a24*a53+a15*a21*a44*a53)
            ai(2,4) = -(-a34*a23*a55*a11+a34*a23*a15*a51+a34*a55*a21*a13
     &               -a34*a15*a21*a53+a34*a53*a25*a11- a34*a13*a25*a51-
     &                a23*a15*a31*a54+a23*a35*a54*a11+a23*a55*a31*a14
     &           -a23*a14*a35*a51+ a13*a25*a31*a54-a55*a21*a14*a33+a55*
     &                a11*a24*a33-a33*a24*a15*a51+a15*a53*a31*a24- a35*
     &             a54*a21*a13-a53*a24*a35*a11-a33*a25*a54*a11-a53*a25*
     &                a31*a14+a14*a35*a21*a53+ a15*a21*a33*a54+a24*a13*
     &                a35*a51+a33*a14*a25*a51-a55*a31*a13*a24)
            ai(2,5) = -(-a41*a24*a13*a35+a13*a34*a41*a25+a14*a41*a23*a35
     &               -a41*a23*a34*a15-a33*a14*a41*a25+ a33*a41*a24*a15+
     &                a11*a23*a34*a45-a34*a43*a11*a25+a21*a43*a15*a34
     &           -a21*a13*a34*a45+ a44*a31*a23*a15-a14*a31*a23*a45-a44*
     &                a11*a23*a35-a31*a24*a43*a15+a14*a43*a31*a25- a44*
     &             a13*a31*a25+a11*a24*a43*a35+a31*a13*a24*a45-a21*a33*
     &                a15*a44-a21*a43*a14*a35+ a21*a13*a35*a44+a21*a33*
     &                a14*a45-a33*a11*a24*a45+a33*a44*a11*a25)
            ai(3,1) = (-a41*a34*a25*a52+a41*a34*a55*a22+a41*a25*a54*a32
     &           +a41*a24*a35*a52-a41*a55*a24*a32- a41*a35*a54*a22-a34*
     &                a51*a45*a22-a34*a55*a21*a42+a34*a21*a45*a52+a34*
     &           a25*a51*a42- a25*a54*a31*a42-a24*a35*a51*a42+a44*a31*
     &                a25*a52+a31*a45*a54*a22-a31*a24*a45*a52- a21*a45*
     &             a54*a32-a21*a35*a44*a52+a51*a45*a24*a32+a55*a31*a24*
     &                a42+a51*a35*a44*a22+ a55*a21*a32*a44-a55*a31*a22*
     &                a44+a35*a54*a21*a42-a25*a44*a51*a32)
            ai(3,2) = -(a41*a12*a34*a55-a41*a12*a35*a54-a41*a52*a15*a34
     &           -a41*a32*a14*a55+a41*a32*a15*a54+ a41*a52*a14*a35-a12*
     &                a51*a45*a34-a12*a55*a31*a44+a12*a31*a45*a54+a12*
     &           a51*a35*a44- a34*a11*a42*a55+a34*a11*a52*a45+a34*a51*
     &                a42*a15-a11*a32*a45*a54-a11*a52*a35*a44+ a31*a52*
     &             a15*a44+a51*a32*a14*a45+a11*a32*a44*a55-a31*a52*a14*
     &                a45+a11*a42*a35*a54- a51*a32*a15*a44-a51*a42*a14*
     &                a35-a31*a42*a15*a54+a31*a42*a14*a55)
            ai(3,3) = (a41*a12*a24*a55-a41*a12*a25*a54-a41*a52*a15*a24
     &          +a41*a22*a15*a54-a41*a55*a14*a22+ a41*a25*a52*a14+a12*
     &                a21*a45*a54-a12*a55*a21*a44+a12*a25*a44*a51-a12*
     &           a51*a45*a24- a11*a42*a55*a24+a55*a21*a14*a42-a21*a42*
     &                a15*a54-a22*a15*a44*a51+a51*a42*a15*a24+ a55*a11*
     &             a22*a44+a25*a54*a11*a42-a25*a44*a11*a52+a11*a52*a45*
     &                a24-a21*a45*a52*a14- a11*a22*a45*a54-a25*a42*a14*
     &                a51+a51*a45*a14*a22+a52*a15*a21*a44)
            ai(3,4) = (a12*a34*a55*a21-a12*a34*a25*a51-a12*a35*a54*a21
     &           +a12*a25*a31*a54+a12*a24*a35*a51- a12*a55*a31*a24-a34*
     &                a52*a15*a21+a34*a25*a11*a52+a34*a22*a15*a51-a34*
     &           a55*a11*a22- a22*a15*a31*a54+a55*a11*a24*a32+a32*a15*
     &                a54*a21+a52*a15*a31*a24+a55*a31*a14*a22+ a25*a51*
     &             a14*a32-a24*a35*a11*a52+a52*a14*a35*a21-a32*a14*a55*
     &                a21-a25*a31*a52*a14- a24*a32*a15*a51-a25*a11*a32*
     &                a54-a22*a14*a35*a51+a35*a54*a11*a22)
            ai(3,5) = (a12*a34*a41*a25-a12*a41*a24*a35-a34*a22*a41*a15
     &           +a41*a24*a32*a15+a41*a22*a14*a35- a14*a32*a41*a25-a12*
     &                a21*a34*a45+a12*a31*a24*a45-a12*a44*a31*a25+a12*
     &           a21*a35*a44- a34*a11*a42*a25+a11*a22*a34*a45+a21*a34*
     &                a42*a15+a11*a42*a24*a35-a21*a42*a14*a35- a21*a44*
     &             a32*a15-a31*a14*a22*a45-a11*a24*a32*a45-a31*a24*a42*
     &                a15-a11*a22*a44*a35+ a21*a14*a32*a45+a42*a14*a31*
     &                a25+a44*a11*a32*a25+a44*a22*a31*a15)
            ai(4,1) = -(-a41*a23*a55*a32+a41*a23*a35*a52+a41*a53*a25*
     &           a32-a41*a35*a53*a22+a41*a55*a22*a33- a41*a33*a25*a52+
     &                a23*a55*a31*a42-a23*a35*a51*a42+a23*a51*a45*a32
     &           -a23*a31*a45*a52- a51*a45*a22*a33-a53*a25*a31*a42-a51*
     &                a43*a25*a32-a55*a21*a33*a42-a55*a31*a22*a43+a33*
     &            a25*a51*a42+a43*a31*a25*a52-a21*a53*a45*a32-a21*a43*
     &                a35*a52+a31*a45*a53*a22+ a35*a43*a51*a22+a21*a33*
     &                a45*a52+a21*a43*a55*a32+a35*a21*a53*a42)
            ai(4,2) = -(-a41*a12*a55*a33+a41*a12*a35*a53-a41*a32*a15*
     &            a53+a41*a52*a15*a33-a41*a35*a52*a13+ a41*a55*a13*a32+
     &                a12*a51*a45*a33-a12*a35*a43*a51+a12*a55*a31*a43
     &           -a12*a31*a45*a53- a51*a42*a15*a33+a32*a15*a43*a51-a55*
     &                a31*a13*a42-a55*a11*a32*a43-a11*a52*a45*a33- a52*
     &             a15*a31*a43+a11*a42*a55*a33+a11*a32*a45*a53+a35*a43*
     &                a11*a52-a35*a53*a11*a42+ a31*a45*a52*a13+a35*a42*
     &                a13*a51-a51*a45*a13*a32+a31*a42*a15*a53)
            ai(4,3) = (-a41*a12*a55*a23+a41*a12*a53*a25+a41*a52*a15*a23
     &               -a41*a22*a53*a15+a41*a22*a13*a55- a41*a52*a13*a25+
     &                a12*a51*a45*a23+a12*a21*a43*a55-a12*a21*a53*a45
     &           -a12*a51*a43*a25- a23*a11*a52*a45-a23*a51*a42*a15+a23*
     &                a11*a42*a55+a11*a22*a53*a45-a11*a22*a43*a55- a11*
     &             a42*a53*a25-a21*a42*a13*a55+a51*a42*a13*a25+a11*a52*
     &                a43*a25-a52*a15*a21*a43+ a21*a52*a13*a45+a51*a22*
     &                a43*a15-a51*a22*a13*a45+a21*a42*a53*a15)
            ai(4,4) = -(a12*a23*a35*a51-a12*a23*a55*a31+a12*a53*a25*a31
     &               -a12*a35*a21*a53-a12*a33*a25*a51+ a12*a55*a21*a33-
     &                a23*a35*a11*a52+a23*a52*a15*a31-a23*a32*a15*a51
     &           +a23*a55*a11*a32+ a32*a15*a21*a53-a55*a21*a13*a32-a52*
     &                a13*a25*a31+a35*a11*a22*a53-a55*a11*a22*a33- a53*
     &             a25*a11*a32+a13*a32*a25*a51+a33*a25*a11*a52-a52*a15*
     &                a21*a33+a33*a22*a15*a51- a35*a22*a51*a13-a22*a53*
     &                a15*a31+a22*a13*a55*a31+a35*a21*a52*a13)
            ai(4,5) = -(-a12*a41*a23*a35+a12*a33*a41*a25+a41*a23*a32*a15
     &               +a41*a13*a22*a35-a33*a22*a41*a15- a13*a32*a41*a25+
     &                a12*a31*a23*a45-a12*a43*a31*a25+a12*a21*a43*a35
     &           -a12*a21*a33*a45- a11*a23*a32*a45-a31*a23*a42*a15+a11*
     &                a23*a42*a35+a13*a42*a31*a25-a11*a22*a43*a35+ a11*
     &             a22*a33*a45+a43*a22*a31*a15-a33*a11*a42*a25-a31*a13*
     &                a22*a45-a21*a13*a42*a35+ a21*a13*a32*a45+a43*a11* 
     &                a32*a25-a21*a43*a32*a15+a21*a33*a42*a15)
            ai(5,1) = -(a21*a33*a54*a42-a21*a33*a44*a52+a21*a44*a53*a32
     &               +a21*a34*a43*a52-a21*a53*a34*a42- a21*a54*a32*a43-
     &                a33*a54*a41*a22-a33*a51*a24*a42+a33*a41*a24*a52
     &           +a33*a44*a51*a22+ a54*a41*a23*a32-a44*a51*a23*a32+a51*
     &                a23*a34*a42+a53*a34*a41*a22-a41*a23*a34*a52- a34*
     &             a43*a51*a22-a31*a24*a43*a52+a44*a31*a23*a52-a44*a53*
     &                a22*a31-a41*a24*a53*a32- a54*a31*a23*a42+a51*a24*
     &                a32*a43+a54*a31*a22*a43+a53*a31*a24*a42)
            ai(5,2) = (-a12*a33*a54*a41+a12*a33*a44*a51+a12*a53*a34*a41
     &           +a12*a54*a31*a43-a12*a44*a53*a31- a12*a34*a43*a51-a33*
     &                a44*a11*a52-a33*a42*a14*a51+a33*a54*a11*a42+a33*
     &           a52*a14*a41- a54*a11*a32*a43-a44*a13*a32*a51-a53*a34*
     &                a11*a42-a52*a14*a31*a43+a42*a13*a34*a51+ a44*a52*
     &             a13*a31-a52*a13*a34*a41+a54*a41*a13*a32+a34*a43*a11*
     &                a52+a32*a14*a43*a51+ a42*a14*a53*a31-a54*a31*a13*
     &                a42-a53*a14*a32*a41+a44*a53*a11*a32)
            ai(5,3) = -(a12*a21*a54*a43-a12*a21*a44*a53+a12*a44*a51*a23
     &           +a12*a41*a24*a53-a12*a51*a24*a43- a12*a54*a41*a23+a21*
     &                a44*a52*a13+a21*a42*a14*a53-a21*a52*a14*a43-a21*
     &            a54*a13*a42- a41*a24*a52*a13+a51*a24*a13*a42-a44*a11*
     &                a52*a23-a44*a22*a51*a13-a54*a11*a22*a43+ a54*a11*
     &             a23*a42+a54*a41*a13*a22-a42*a14*a51*a23-a11*a42*a24*
     &                a53+a11*a22*a44*a53- a41*a22*a14*a53+a22*a51*a14*
     &                a43+a52*a14*a41*a23+a11*a52*a24*a43)
            ai(5,4) = -(-a12*a21*a33*a54+a12*a21*a53*a34+a12*a33*a51*
     &           a24+a12*a31*a23*a54-a12*a51*a23*a34- a12*a53*a31*a24+
     &                a21*a33*a52*a14-a21*a52*a13*a34+a21*a13*a32*a54-
     &           a21*a53*a14*a32- a33*a22*a51*a14-a33*a11*a52*a24+a11*
     &                a22*a33*a54-a11*a22*a53*a34+a53*a11*a24*a32+a53*
     &            a31*a14*a22-a11*a23*a32*a54+a52*a13*a31*a24-a31*a13*
     &               a22*a54+a22*a51*a13*a34+ a11*a52*a23*a34-a13*a32*
     &               a51*a24+a51*a23*a14*a32-a31*a23*a52*a14)
            ai(5,5) = -(-a11*a22*a33*a44+a11*a22*a34*a43+a11*a32*a23*
     &           a44-a11*a32*a24*a43-a11*a42*a23*a34+ a11*a42*a24*a33+
     &                a21*a12*a33*a44-a21*a12*a34*a43-a21*a32*a13*a44+
     &           a21*a32*a14*a43+ a21*a42*a13*a34-a21*a42*a14*a33-a31*
     &                a12*a23*a44+a31*a12*a24*a43+a31*a22*a13*a44-a31*
     &            a22*a14*a43-a31*a42*a13*a24+a31*a42*a14*a23+a41*a12*
     &               a23*a34-a41*a12*a24*a33- a41*a22*a13*a34+a41*a22*
     &               a14*a33+a41*a32*a13*a24-a41*a32*a14*a23)
            ai = 1.d0/deta*ai
         endif
!
      else
         print *, 'error in xinvmat: not set up for n = ', n
         stop
      endif
      return 
      end

